name: Build and Push Frontend Docker Image

on:
  push:
    branches:
      - master
    paths:
      - 'CVManagerFrontend/**'
      - '.github/workflows/build-frontend.yml'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-frontend

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Extract App Info
        run: |
          app_name=$(node -p "require('./CVManagerFrontend/package.json').name")
          app_version=$(node -p "require('./CVManagerFrontend/package.json').version")
          echo "app_name=$app_name" >> $GITHUB_ENV
          echo "app_version=$app_version" >> $GITHUB_ENV

      - name: Get Build Time
        run: |
          build_time=$(TZ='Europe/Berlin' date '+%Y-%m-%d %H:%M:%S')
          echo "build_time=$build_time" >> $GITHUB_ENV

      - name: Update index.html with Version Info
        run: |
          sed -i "s@<head>@<head>\n  <!-- App Version: ${{ env.app_version }} | Build Time: ${{ env.build_time }} -->@" CVManagerFrontend/src/index.html
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=${{ env.app_version }}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ./CVManagerFrontend
          file: ./CVManagerFrontend/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            ANGULAR_CONFIGURATION=production

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
